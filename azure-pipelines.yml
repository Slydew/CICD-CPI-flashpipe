trigger:
  - azure-pipelines

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: cpi-dev
  - group: cpi-prod

# https://docs.microsoft.com/en-gb/azure/devops/pipelines/process/container-phases
resources:
  containers:
    - container: flashpipe
      image: engswee/flashpipe:1.0.1

jobs:
  - job: build
    container: flashpipe
    steps:
      # Local unit testing
      # https://docs.microsoft.com/azure/devops/pipelines/tasks/build/maven
      - task: Maven@3
        displayName: 'Local unit test with Maven'
        inputs:
          mavenPomFile: 'pom.xml'
          goals: 'test'
          options: '-o -s /usr/share/maven/ref/settings-docker.xml -DfailIfNoTests=false'
          publishJUnitResults: true
      # Upload/Update design time
      - bash: /usr/bin/update_designtime_artifact.sh --debug /tmp $DEV_HOST_TMN $DEV_CPI_USER $DEV_CPI_PW GroovyXMLTransformation "Groovy XML Transformation" FlashPipeDemo "FlashPipe Demo" "$(Build.SourcesDirectory)/FlashPipe Demo/Groovy XML Transformation"
        displayName: 'Update/Upload Groovy XML Transformation to design time'
        env:
          DEV_CPI_USER: $(dev_user)
          DEV_CPI_PW: $(dev_password)
      - bash: /usr/bin/update_designtime_artifact.sh --debug /tmp $DEV_HOST_TMN $DEV_CPI_USER $DEV_CPI_PW INVOIC02_to_Invoice_XML "INVOIC02 to Invoice XML" FlashPipeDemo "FlashPipe Demo" "$(Build.SourcesDirectory)/FlashPipe Demo/INVOIC02_to_Invoice_XML"
        displayName: 'Update/Upload INVOIC02 to Invoice XML to design time'
        env:
          DEV_CPI_USER: $(dev_user)
          DEV_CPI_PW: $(dev_password)
      # Deploy runtime
      - bash: /usr/bin/deploy_runtime_artifact.sh GroovyXMLTransformation $DEV_HOST_TMN $DEV_CPI_USER $DEV_CPI_PW
        displayName: 'Deploy Groovy XML Transformation to runtime'
        env:
          DEV_CPI_USER: $(dev_user)
          DEV_CPI_PW: $(dev_password)
      - bash: /usr/bin/deploy_runtime_artifact.sh INVOIC02_to_Invoice_XML $DEV_HOST_TMN $DEV_CPI_USER $DEV_CPI_PW
        displayName: 'Deploy INVOIC02 to Invoice XML to runtime'
        env:
          DEV_CPI_USER: $(dev_user)
          DEV_CPI_PW: $(dev_password)
      # Publish Pipeline artifact
      - publish: $(System.DefaultWorkingDirectory)
        artifact: GitRepo
  - deployment: deploy_qa
    container: flashpipe
    dependsOn: build
    environment: cpi_dev
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: GitRepo
                path: $(Build.SourcesDirectory)/
            # Upload/Update design time
            - bash: /usr/bin/update_designtime_artifact.sh --manifest_file="$(Build.SourcesDirectory)/FlashPipe Demo/Groovy XML Transformation/QA/MANIFEST.MF" --param_file="$(Build.SourcesDirectory)/FlashPipe Demo/Groovy XML Transformation/QA/parameters.prop" /tmp $DEV_HOST_TMN $DEV_CPI_USER $DEV_CPI_PW GroovyXMLTransformation_QA "Groovy XML Transformation QA" FlashPipeDemoQA "FlashPipe Demo QA" "$(Build.SourcesDirectory)/FlashPipe Demo/Groovy XML Transformation"
              displayName: 'Update/Upload Groovy XML Transformation to design time'
              env:
                DEV_CPI_USER: $(dev_user)
                DEV_CPI_PW: $(dev_password)
            - bash: /usr/bin/update_designtime_artifact.sh --manifest_file="$(Build.SourcesDirectory)/FlashPipe Demo/INVOIC02_to_Invoice_XML/QA/MANIFEST.MF" --param_file="$(Build.SourcesDirectory)/FlashPipe Demo/INVOIC02_to_Invoice_XML/QA/parameters.prop" /tmp $DEV_HOST_TMN $DEV_CPI_USER $DEV_CPI_PW INVOIC02_to_Invoice_XML_QA "INVOIC02 to Invoice XML QA" FlashPipeDemoQA "FlashPipe Demo QA" "$(Build.SourcesDirectory)/FlashPipe Demo/INVOIC02_to_Invoice_XML"
              displayName: 'Update/Upload INVOIC02 to Invoice XML to design time'
              env:
                DEV_CPI_USER: $(dev_user)
                DEV_CPI_PW: $(dev_password)
            # Deploy runtime
            - bash: /usr/bin/deploy_runtime_artifact.sh GroovyXMLTransformation_QA $DEV_HOST_TMN $DEV_CPI_USER $DEV_CPI_PW
              displayName: 'Deploy Groovy XML Transformation to runtime'
              env:
                DEV_CPI_USER: $(dev_user)
                DEV_CPI_PW: $(dev_password)
            - bash: /usr/bin/deploy_runtime_artifact.sh INVOIC02_to_Invoice_XML_QA $DEV_HOST_TMN $DEV_CPI_USER $DEV_CPI_PW
              displayName: 'Deploy INVOIC02 to Invoice XML to runtime'
              env:
                DEV_CPI_USER: $(dev_user)
                DEV_CPI_PW: $(dev_password)
  - deployment: deploy_prod
    container: flashpipe
    dependsOn: deploy_qa
    environment: cpi_prod
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: GitRepo
                path: $(Build.SourcesDirectory)/
            # Upload/Update design time
            - bash: /usr/bin/update_designtime_artifact.sh --param_file="$(Build.SourcesDirectory)/FlashPipe Demo/Groovy XML Transformation/PROD/parameters.prop" /tmp $PROD_HOST_TMN $PROD_CPI_USER $PROD_CPI_PW GroovyXMLTransformation "Groovy XML Transformation" FlashPipeDemo "FlashPipe Demo" "$(Build.SourcesDirectory)/FlashPipe Demo/Groovy XML Transformation"
              displayName: 'Update/Upload Groovy XML Transformation to design time'
              env:
                PROD_CPI_USER: $(prod_user)
                PROD_CPI_PW: $(prod_password)
            - bash: /usr/bin/update_designtime_artifact.sh --param_file="$(Build.SourcesDirectory)/FlashPipe Demo/INVOIC02_to_Invoice_XML/PROD/parameters.prop" /tmp $PROD_HOST_TMN $PROD_CPI_USER $PROD_CPI_PW INVOIC02_to_Invoice_XML "INVOIC02 to Invoice XML" FlashPipeDemo "FlashPipe Demo" "$(Build.SourcesDirectory)/FlashPipe Demo/INVOIC02_to_Invoice_XML"
              displayName: 'Update/Upload INVOIC02 to Invoice XML to design time'
              env:
                PROD_CPI_USER: $(prod_user)
                PROD_CPI_PW: $(prod_password)
            # Deploy runtime
            - bash: /usr/bin/deploy_runtime_artifact.sh GroovyXMLTransformation $PROD_HOST_TMN $PROD_CPI_USER $PROD_CPI_PW
              displayName: 'Deploy Groovy XML Transformation to runtime'
              env:
                PROD_CPI_USER: $(prod_user)
                PROD_CPI_PW: $(prod_password)
            - bash: /usr/bin/deploy_runtime_artifact.sh INVOIC02_to_Invoice_XML $PROD_HOST_TMN $PROD_CPI_USER $PROD_CPI_PW
              displayName: 'Deploy INVOIC02 to Invoice XML to runtime'
              env:
                PROD_CPI_USER: $(prod_user)
                PROD_CPI_PW: $(prod_password)